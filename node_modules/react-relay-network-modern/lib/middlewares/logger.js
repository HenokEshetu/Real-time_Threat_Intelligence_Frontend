"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = loggerMiddleware;
var _RelayRequest = _interopRequireDefault(require("../RelayRequest"));
var _RelayRequestBatch = _interopRequireDefault(require("../RelayRequestBatch"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function loggerMiddleware(opts) {
  var logger = opts && opts.logger || console.log.bind(console, '[RELAY-NETWORK]');
  return function (next) {
    return function (req) {
      var start = new Date().getTime();
      logger("Run ".concat(req.getID()), req);
      return next(req).then(function (res) {
        var end = new Date().getTime();
        var queryId;
        var queryData;
        if (req instanceof _RelayRequest["default"]) {
          queryId = req.getID();
          queryData = {
            query: req.getQueryString(),
            variables: req.getVariables()
          };
        } else if (req instanceof _RelayRequestBatch["default"]) {
          queryId = req.getID();
          queryData = {
            requestList: req.requests,
            responseList: res.json
          };
        } else {
          queryId = 'CustomRequest';
          queryData = {};
        }
        logger("Done ".concat(queryId, " in ").concat(end - start, "ms"), _objectSpread(_objectSpread({}, queryData), {}, {
          req: req,
          res: res
        }));
        if (res.status !== 200) {
          logger("Status ".concat(res.status, ": ").concat(res.statusText || '', " for ").concat(queryId));
        }
        return res;
      }, function (error) {
        if (error && error.name && error.name === 'AbortError') {
          logger("Cancelled ".concat(req.getID()));
        }
        throw error;
      });
    };
  };
}