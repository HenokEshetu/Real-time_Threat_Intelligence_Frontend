import { Field, InputType } from '@nestjs/graphql';
import { MalwareType, KillChainPhaseInput, CommonInput, RelationshipCommonInput,RelationshipCommonProperties, KillChainPhase } from '../../../../core/types/common-data-types';

@InputType()
export class CreateMalwareInput extends CommonInput {
  @Field(() => String)
  name: string;

  @Field(() => String, { nullable: true })
  description?: string;

  @Field(() => [MalwareType])
  malware_types: MalwareType[];

  @Field(() => Boolean)
  is_family: boolean;

  @Field(() => [String], { nullable: true })
  aliases?: string[];

  @Field(() => [KillChainPhaseInput], { nullable: true })
  kill_chain_phases?: KillChainPhase[];

  @Field(() => Date, { nullable: true })
  first_seen?: Date;

  @Field(() => Date, { nullable: true })
  last_seen?: Date;

  @Field(() => [String], { nullable: true })
  operating_system_refs?: string[];

  @Field(() => [String], { nullable: true })
  architecture_execution_envs?: string[];

  @Field(() => [String], { nullable: true })
  implementation_languages?: string[];

  @Field(() => [String], { nullable: true })
  capabilities?: string[];

  @Field(() => String, { nullable: true })
  sample_refs?: string;

@Field(() => [RelationshipCommonInput], { nullable: true })
     Relationship?: [RelationshipCommonProperties];


}



@InputType()
export class UpdateMalwareInput extends CreateMalwareInput {
 
}